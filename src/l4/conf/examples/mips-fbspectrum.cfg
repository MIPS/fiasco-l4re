-- vim:set ft=lua:

-- This script starts mag and the spectrum demo.
--
-- For that we need a frame-buffer and io to get access to the required hardware
-- resources.
--
-- Target platform is MIPS malta.

require("L4");


local l = L4.default_loader;

local io_buses =
  {
    gui   = l:new_channel();
    fbdrv = l:new_channel();
  };

l:start({
          caps = {
            gui    = io_buses.gui:svr(),
            fbdrv  = io_buses.fbdrv:svr(),

            icu    = L4.Env.icu,
            sigma0 = L4.cast(L4.Proto.Factory, L4.Env.sigma0):create(L4.Proto.Sigma0),
          },
          log      = { "IO", "y" },
          l4re_dbg = L4.Dbg.Warn,
        },
        "rom/io rom/malta.devs rom/mips-fb.io");

local fbdrv_fb = l:new_channel();

l:startv({
           caps = {
             vbus = io_buses.fbdrv,
             fb   = fbdrv_fb:svr(),
           },
           log      = { "fbdrv", "r" },
           l4re_dbg = L4.Dbg.Warn,
         },
         "rom/fb-drv");

local mag_caps = {
                   mag = l:new_channel(),
                   svc = l:new_channel(),
                 };

l:start({
          caps = {
            vbus = io_buses.gui,
            fb   = fbdrv_fb,
            mag  = mag_caps.mag:svr(),
            svc  = mag_caps.svc:svr(),
          },
          log      = { "mag", "g" },
          l4re_dbg = L4.Dbg.Warn,
        },
        "rom/mag");

e = l:start({
              caps = {
                fb = mag_caps.svc:create(L4.Proto.Goos, "g=320x240"),
                --fb = mag_caps.svc:create(L4.Proto.Goos, "g=640x480"),
              },
              log      = { "spectrum", "b" },
              l4re_dbg = L4.Dbg.Debug,
            },
            "rom/ex_fb_spectrum_cc");
print("ex_fb_spectrum_cc exited with: " .. e:wait());
